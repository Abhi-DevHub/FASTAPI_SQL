"""Add default to created_at and updated_at

Revision ID: b4d5b9d35e8d
Revises: a9a344a9be94
Create Date: 2025-07-10 10:35:33.903976

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b4d5b9d35e8d'
down_revision: Union[str, Sequence[str], None] = 'a9a344a9be94'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_bookmarks_short_code'), table_name='bookmarks')
    op.create_index(op.f('ix_bookmarks_short_code'), 'bookmarks', ['short_code'], unique=True)
    op.alter_column(
        'users', 'created_at',
        existing_type=sa.DateTime(timezone=True),
        nullable=False,
        server_default=sa.text('now()')
    )
    op.alter_column(
        'users', 'updated_at',
        existing_type=sa.DateTime(timezone=True),
        nullable=False,
        server_default=sa.text('now()')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_bookmarks_short_code'), table_name='bookmarks')
    op.create_index(op.f('ix_bookmarks_short_code'), 'bookmarks', ['short_code'], unique=False)
    op.alter_column(
        'users', 'created_at',
        existing_type=sa.DateTime(timezone=True),
        nullable=False,
        server_default=None
    )
    op.alter_column(
        'users', 'updated_at',
        existing_type=sa.DateTime(timezone=True),
        nullable=False,
        server_default=None,
        onupdate=None
    )
    # Revert the changes made to the 'created_at' and 'updated_at' columns
    # ### end Alembic commands ###
